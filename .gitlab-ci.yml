variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  AR_IMAGE: $GOOGLE_ARTIFACT_REGISTRY_REPOSITORY_LOCATION-docker.pkg.dev/$GOOGLE_ARTIFACT_REGISTRY_PROJECT_ID/$GOOGLE_ARTIFACT_REGISTRY_REPOSITORY_NAME/$CI_PROJECT_NAME:$CI_COMMIT_SHORT_SHA

stages:
  - code-analysis
  - build-image
  - upload-image-artifact
  - image-vulnerability-scan
  - update-deployment-manifest

sonar-analysis:
  stage: code-analysis
  only:
    - feature
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner

owasp_dependency_check:
  image:
    name: registry.gitlab.com/gitlab-ci-utils/docker-dependency-check:latest
    entrypoint: [""]
  stage: code-analysis
  only:
    - feature
  script:
    - >
      /usr/share/dependency-check/bin/dependency-check.sh --scan "./" --format ALL
      --project "$CI_PROJECT_NAME" --failOnCVSS 0
  allow_failure: true
  artifacts:
    when: always
    paths:
      - "./dependency-check-report.html"
      - "./dependency-check-report.json"

build-image:
  stage: build-image
  image: docker:24.0.5
  only:
    - feature
  services:
    - docker:24.0.5-dind
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG

include:
  - component: gitlab.com/google-gitlab-components/artifact-registry/upload-artifact-registry@main
    inputs:
      stage: upload-image-artifact
      source: $IMAGE_TAG
      target: $AR_IMAGE

image-vulnerability-scan:
  stage: image-vulnerability-scan
  only:
    - feature
  image:
    name: aquasec/trivy
    entrypoint: [""]
  script:
    - trivy image $IMAGE_TAG --output "$CI_PROJECT_DIR/gl-container-scanning-report.json"
  artifacts:
    when: always
    reports:
      container_scanning: gl-container-scanning-report.json

update-deployment-manifest:
  stage: update-deployment-manifest
  image: ubuntu:22.04
  only:
    - feature
  before_script:
    - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client git -y)"
    - mkdir -p /root/.ssh
    - echo "$SSH_PRIVATE_KEY" > /root/.ssh/id_rsa
    - chmod 600 /root/.ssh/id_rsa
    - ssh-keyscan -H gitlab.com >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - git config --global user.email "gitlab-ci@gmail.com"
    - git config --global user.name "gitlab-ci"
    - git clone git@gitlab.com:learning1482041/studyroom-manifest.git
    - ls studyroom-manifest
  script:
    - cd studyroom-manifest/application
    - sed -i "s/${CI_PROJECT_NAME}:.*/${CI_PROJECT_NAME}:${CI_COMMIT_SHORT_SHA}/g" deploy.yaml
    - git add .
    - git commit -am "Update Image"
    - git push origin main
